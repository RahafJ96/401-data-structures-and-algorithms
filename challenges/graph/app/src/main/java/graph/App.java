/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package graph;

import java.util.ArrayList;
import java.util.List;

public class App {

    public static void main(String[] args) {

        // Code challenge 35
        System.out.println(" ");
        System.out.println("<<<<< Code Challenge 35 >>>>>");
        Graph graph = new Graph();

        graph.addVertex("Rahaf");
        graph.addVertex("Roaa");
        graph.addVertex("Ola");
        graph.addVertex("Abdalla");

        graph.addEdge("Rahaf","Roaa");
        graph.addEdge("Rahaf", "Ola");
        graph.addEdge("Rahaf", "Abdalla");
        graph.addEdge("Roaa","Ola");
        graph.addEdge("Ola","Abdalla");
        graph.addEdge("Abdalla", "Roaa");

        System.out.println(graph.printGraph());

        graph.removeEdge("Abdalla", "Ola");
        System.out.println();
        System.out.println("delete edge --> "+graph.printGraph());

        graph.removeVertex("Rahaf");
        System.out.println();
        System.out.println("delete vertex --> " + graph.printGraph());

        System.out.println();
        System.out.println(graph.getVertices());

        System.out.println();
        System.out.println(graph.getNeighbors("Roaa"));

        System.out.println();
        System.out.println(graph.breadthTraverse(graph, "Abdalla"));

        System.out.println();
        System.out.println(graph.depthFirstTraverse(graph, "Abdalla"));

        System.out.println();
        System.out.println(graph.size());

        // Code challenge 36
        System.out.println(" ");
        System.out.println("<<<<< Code Challenge 36 >>>>>");
        Graph graph1 = new Graph();

        graph1.addVertex("Pandora");
        graph1.addVertex("Arendelle");
        graph1.addVertex("Metroville");
        graph1.addVertex("Monstroplolis");
        graph1.addVertex("Narnia");
        graph1.addVertex("Naboo");

        graph1.addEdge("Pandora", "Arendelle");
        graph1.addEdge("Arendelle", "Metroville");
        graph1.addEdge("Arendelle", "Monstroplolis");
        graph1.addEdge("Metroville", "Narnia");
        graph1.addEdge("Metroville", "Naboo");
        graph1.addEdge("Metroville", "Monstroplolis");
        graph1.addEdge("Monstroplolis", "Naboo");
        graph1.addEdge("Narnia", "Naboo");


        System.out.println(graph1.breadthTraverse( "Pandora"));


        // Code Challenge 37
        System.out.println(" ");
        System.out.println("<<<<< Code Challenge 37 >>>>>");
        Graph graph2 = new Graph();

        graph2.addVertex("Pandora");
        graph2.addVertex("Arendelle");
        graph2.addVertex("Metroville");
        graph2.addVertex("Monstroplolis");
        graph2.addVertex("Narnia");
        graph2.addVertex("Naboo");

        graph2.addEdgeWithWeight("Pandora", "Arendelle", 150);
        graph2.addEdgeWithWeight("Arendelle", "Metroville",99);
        graph2.addEdgeWithWeight("Arendelle", "Monstroplolis",42);
        graph2.addEdgeWithWeight("Metroville", "Narnia",37);
        graph2.addEdgeWithWeight("Metroville", "Naboo",26);
        graph2.addEdgeWithWeight("Metroville", "Monstroplolis",105);
        graph2.addEdgeWithWeight("Monstroplolis", "Naboo",73);
        graph2.addEdgeWithWeight("Narnia", "Naboo",250);

        List<String> cities = new ArrayList<>();
        cities.add("Arendelle");
        cities.add("Metroville");

        System.out.println("First Trip ---> "+graph2.businessTrip(graph2,cities));

        // Code Challenge 38
        System.out.println(" ");
        System.out.println("<<<<< Code Challenge 38 >>>>>");
        Graph graph3 = new Graph();

        graph3.addVertex("A");
        graph3.addVertex("B");
        graph3.addVertex("C");
        graph3.addVertex("D");
        graph3.addVertex("E");
        graph3.addVertex("F");
        graph3.addVertex("G");
        graph3.addVertex("H");

        graph3.addEdge("A", "D");
        graph3.addEdge("A", "B");
        graph3.addEdge("B", "D");
        graph3.addEdge("B", "C");
        graph3.addEdge("C", "G");
        graph3.addEdge("D", "F");
        graph3.addEdge("D", "H");
        graph3.addEdge("D", "E");
        graph3.addEdge("F", "H");

        System.out.println("Depth first ---> " + graph3.depthFirstTraverse("A"));
    }
}